{"ast":null,"code":"var _jsxFileName = \"/Users/rayssamel/Downloads/dt-money-master/src/components/NewTransactionModal/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Modal from \"react-modal\";\nimport closeImg from \"../../assets/close.svg\";\nimport incomeImg from \"../../assets/income.svg\";\nimport outcomeImg from \"../../assets/outcome.svg\";\nimport { useTransactions } from \"../../hooks\";\nimport { Container, RadioBox, TransactionTypeContainer } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function NewTransactionModal({\n  isOpen,\n  onRequestClose\n}) {\n  _s();\n\n  const [type, setType] = useState(\"deposit\");\n  const [values, setValues] = useState({\n    title: \"\",\n    category: \"\",\n    value: 0\n  });\n  const {\n    createTransaction\n  } = useTransactions();\n\n  function handleSetTypeDeposit() {\n    setType(\"deposit\");\n  }\n\n  function handleSetTypeWithdraw() {\n    setType(\"withdraw\");\n  }\n\n  function handleChange(prop, value) {\n    setValues({ ...values,\n      [prop]: value\n    });\n  }\n\n  function clearValues() {\n    setValues({\n      title: \"\",\n      category: \"\",\n      value: 0\n    });\n    setType(\"deposit\");\n  }\n\n  function handleCreateNewTransaction(ev) {\n    ev.preventDefault();\n    const data = {\n      title: values.title,\n      type,\n      category: values.category,\n      amount: values.value\n    };\n    createTransaction(data).then(() => {\n      clearValues();\n      onRequestClose();\n    }).catch(() => alert(\"Não foi possível criar um cadastro de transação. Tente novamente mais tarde\"));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onRequestClose: onRequestClose,\n    overlayClassName: \"react-modal-overlay\",\n    className: \"react-modal-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: onRequestClose,\n      className: \"react-modal-close\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: closeImg,\n        alt: \"Fechar modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      onSubmit: handleCreateNewTransaction,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cadastrar transa\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"T\\xEDtulo\",\n        value: values.title,\n        onChange: ev => handleChange(\"title\", ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Valor\",\n        type: \"number\",\n        onChange: ev => handleChange(\"value\", Number(ev.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TransactionTypeContainer, {\n        children: [/*#__PURE__*/_jsxDEV(RadioBox, {\n          type: \"button\",\n          onClick: handleSetTypeDeposit,\n          isActive: type === \"deposit\",\n          activeColor: \"green\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: incomeImg,\n            alt: \"Entrada\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Entrada\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RadioBox, {\n          type: \"button\",\n          onClick: handleSetTypeWithdraw,\n          isActive: type === \"withdraw\",\n          activeColor: \"red\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: outcomeImg,\n            alt: \"Sa\\xEDda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Sa\\xEDda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Categoria\",\n        onChange: ev => handleChange(\"category\", ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewTransactionModal, \"EEOknWisJMb8lqQeF12rL7B0Is8=\", false, function () {\n  return [useTransactions];\n});\n\n_c = NewTransactionModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTransactionModal\");","map":{"version":3,"sources":["/Users/rayssamel/Downloads/dt-money-master/src/components/NewTransactionModal/index.tsx"],"names":["useState","Modal","useTransactions","Container","RadioBox","TransactionTypeContainer","NewTransactionModal","isOpen","onRequestClose","type","setType","values","setValues","title","category","value","createTransaction","handleSetTypeDeposit","handleSetTypeWithdraw","handleChange","prop","clearValues","handleCreateNewTransaction","ev","preventDefault","data","amount","then","catch","alert","closeImg","target","Number","incomeImg","outcomeImg"],"mappings":"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","sourcesContent":["import { FormEvent, useState } from \"react\";\nimport Modal from \"react-modal\";\nimport closeImg from \"../../assets/close.svg\";\nimport incomeImg from \"../../assets/income.svg\";\nimport outcomeImg from \"../../assets/outcome.svg\";\nimport { useTransactions } from \"../../hooks\";\nimport { Container, RadioBox, TransactionTypeContainer } from \"./styles\";\n\ninterface NewTransactionModalProps {\n  isOpen: boolean;\n  onRequestClose: () => void;\n}\n\nexport type Type = \"deposit\" | \"withdraw\";\n\ninterface FormValues {\n  title: string;\n  value: number;\n  category: string;\n}\n\ntype FormObjectValue = \"title\" | \"value\" | \"category\";\n\nexport function NewTransactionModal({\n  isOpen,\n  onRequestClose\n}: NewTransactionModalProps) {\n  const [type, setType] = useState<Type>(\"deposit\");\n  const [values, setValues] = useState<FormValues>({\n    title: \"\",\n    category: \"\",\n    value: 0\n  });\n  const { createTransaction } = useTransactions();\n\n  function handleSetTypeDeposit() {\n    setType(\"deposit\");\n  }\n\n  function handleSetTypeWithdraw() {\n    setType(\"withdraw\");\n  }\n\n  function handleChange(prop: FormObjectValue, value: string | number) {\n    setValues({ ...values, [prop]: value });\n  }\n\n  function clearValues() {\n    setValues({ title: \"\", category: \"\", value: 0 });\n    setType(\"deposit\");\n  }\n\n  function handleCreateNewTransaction(ev: FormEvent) {\n    ev.preventDefault();\n\n    const data = {\n      title: values.title,\n      type,\n      category: values.category,\n      amount: values.value\n    };\n\n    createTransaction(data)\n      .then(() => {\n        clearValues();\n        onRequestClose();\n      })\n      .catch(() =>\n        alert(\n          \"Não foi possível criar um cadastro de transação. Tente novamente mais tarde\"\n        )\n      );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onRequestClose={onRequestClose}\n      overlayClassName=\"react-modal-overlay\"\n      className=\"react-modal-content\"\n    >\n      <button\n        type=\"button\"\n        onClick={onRequestClose}\n        className=\"react-modal-close\"\n      >\n        <img src={closeImg} alt=\"Fechar modal\" />\n      </button>\n      <Container onSubmit={handleCreateNewTransaction}>\n        <h2>Cadastrar transação</h2>\n        <input\n          placeholder=\"Título\"\n          value={values.title}\n          onChange={ev => handleChange(\"title\", ev.target.value)}\n        />\n        <input\n          placeholder=\"Valor\"\n          type=\"number\"\n          onChange={ev => handleChange(\"value\", Number(ev.target.value))}\n        />\n\n        <TransactionTypeContainer>\n          <RadioBox\n            type=\"button\"\n            onClick={handleSetTypeDeposit}\n            isActive={type === \"deposit\"}\n            activeColor=\"green\"\n          >\n            <img src={incomeImg} alt=\"Entrada\" />\n            <span>Entrada</span>\n          </RadioBox>\n          <RadioBox\n            type=\"button\"\n            onClick={handleSetTypeWithdraw}\n            isActive={type === \"withdraw\"}\n            activeColor=\"red\"\n          >\n            <img src={outcomeImg} alt=\"Saída\" />\n            <span>Saída</span>\n          </RadioBox>\n        </TransactionTypeContainer>\n\n        <input\n          placeholder=\"Categoria\"\n          onChange={ev => handleChange(\"category\", ev.target.value)}\n        />\n        <button type=\"submit\">Cadastrar</button>\n      </Container>\n    </Modal>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}