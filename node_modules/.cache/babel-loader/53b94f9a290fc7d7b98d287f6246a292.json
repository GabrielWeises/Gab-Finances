{"ast":null,"code":"var _jsxFileName = \"/Users/rayssamel/Downloads/dt-money-master/src/containers/UserProvider.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { AuthContext } from \"../contexts/Auth\";\nimport { api } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function UserProvider({\n  children\n}) {\n  _s();\n\n  const [signed, setSigned] = useState(false);\n  const [user, setUser] = useState(null);\n\n  async function Authenticate(user) {\n    return api.post(\"/auth\", user).then(response => {\n      if (response.data.error) {\n        toast.error(response.data.error);\n      } else {\n        setUser(response.data.user);\n        setSigned(true);\n      }\n    }).catch(() => {\n      toast.error(\"Erro no sistema de login.\");\n    });\n  }\n\n  async function Register(user) {\n    return api.post(\"/signup\", user).then(response => {\n      if (response.data.error) {\n        toast.error(response.data.error);\n      } else {\n        setUser(response.data.user);\n        setSigned(true);\n      }\n    }).catch(() => {\n      toast.error(\"Erro no sistema de login.\");\n    });\n  }\n\n  async function Logout() {\n    setUser(null);\n    setSigned(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      signed,\n      user,\n      Authenticate,\n      Register,\n      Logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserProvider, \"OiO8+ikyrwnHsaL7v7Zmdpen3gQ=\");\n\n_c = UserProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"sources":["/Users/rayssamel/Downloads/dt-money-master/src/containers/UserProvider.tsx"],"names":["useState","toast","AuthContext","api","UserProvider","children","signed","setSigned","user","setUser","Authenticate","post","then","response","data","error","catch","Register","Logout"],"mappings":";;;AAAA,SAAoBA,QAApB,QAAoC,OAApC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,WAAT,QAA6C,kBAA7C;AACA,SAASC,GAAT,QAAoB,iBAApB;;AAWA,OAAO,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAuD;AAAA;;AAC5D,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAU,KAAV,CAApC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAc,IAAd,CAAhC;;AAEA,iBAAeU,YAAf,CAA4BF,IAA5B,EAA6C;AAC3C,WAAOL,GAAG,CACPQ,IADI,CAC4B,OAD5B,EACqCH,IADrC,EAEJI,IAFI,CAECC,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACC,IAAT,CAAcC,KAAlB,EAAyB;AACvBd,QAAAA,KAAK,CAACc,KAAN,CAAYF,QAAQ,CAACC,IAAT,CAAcC,KAA1B;AACD,OAFD,MAEO;AACLN,QAAAA,OAAO,CAACI,QAAQ,CAACC,IAAT,CAAcN,IAAf,CAAP;AACAD,QAAAA,SAAS,CAAC,IAAD,CAAT;AACD;AACF,KATI,EAUJS,KAVI,CAUE,MAAM;AACXf,MAAAA,KAAK,CAACc,KAAN,CAAY,2BAAZ;AACD,KAZI,CAAP;AAaD;;AAED,iBAAeE,QAAf,CAAwBT,IAAxB,EAAyC;AACvC,WAAOL,GAAG,CACPQ,IADI,CAC4B,SAD5B,EACuCH,IADvC,EAEJI,IAFI,CAECC,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACC,IAAT,CAAcC,KAAlB,EAAyB;AACvBd,QAAAA,KAAK,CAACc,KAAN,CAAYF,QAAQ,CAACC,IAAT,CAAcC,KAA1B;AACD,OAFD,MAEO;AACLN,QAAAA,OAAO,CAACI,QAAQ,CAACC,IAAT,CAAcN,IAAf,CAAP;AACAD,QAAAA,SAAS,CAAC,IAAD,CAAT;AACD;AACF,KATI,EAUJS,KAVI,CAUE,MAAM;AACXf,MAAAA,KAAK,CAACc,KAAN,CAAY,2BAAZ;AACD,KAZI,CAAP;AAaD;;AAED,iBAAeG,MAAf,GAAwB;AACtBT,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAF,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD;;AAED,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AAAED,MAAAA,MAAF;AAAUE,MAAAA,IAAV;AAAgBE,MAAAA,YAAhB;AAA8BO,MAAAA,QAA9B;AAAwCC,MAAAA;AAAxC,KADT;AAAA,cAGGb;AAHH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAhDeD,Y;;KAAAA,Y","sourcesContent":["import { ReactNode, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { AuthContext, User, UserInput } from \"../contexts/Auth\";\nimport { api } from \"../services/api\";\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\ninterface AuthenticateResponseProps {\n  user?: User;\n  error?: string;\n}\n\nexport function UserProvider({ children }: AuthProviderProps) {\n  const [signed, setSigned] = useState<boolean>(false);\n  const [user, setUser] = useState<User | null>(null);\n\n  async function Authenticate(user: UserInput) {\n    return api\n      .post<AuthenticateResponseProps>(\"/auth\", user)\n      .then(response => {\n        if (response.data.error) {\n          toast.error(response.data.error);\n        } else {\n          setUser(response.data.user!);\n          setSigned(true);\n        }\n      })\n      .catch(() => {\n        toast.error(\"Erro no sistema de login.\");\n      });\n  }\n\n  async function Register(user: UserInput) {\n    return api\n      .post<AuthenticateResponseProps>(\"/signup\", user)\n      .then(response => {\n        if (response.data.error) {\n          toast.error(response.data.error);\n        } else {\n          setUser(response.data.user!);\n          setSigned(true);\n        }\n      })\n      .catch(() => {\n        toast.error(\"Erro no sistema de login.\");\n      });\n  }\n\n  async function Logout() {\n    setUser(null);\n    setSigned(false);\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{ signed, user, Authenticate, Register, Logout }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}